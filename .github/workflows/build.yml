name: Github Pages Deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    name: Install and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # cache node_modules 
          path: ~/.pnpm-store
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('pnpm-lock.yaml') }}

      - name: Install dependency and build
        env:
          VITE_BACKEND_ADDR: ${{ secrets.VITE_BACKEND_ADDR }}
          VITE_AMAP_API_KEY: ${{ secrets.VITE_AMAP_API_KEY }}
        run: |
          corepack enable
          pnpm i
          pnpm build



      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./dist
          retention-days: 1


  
  deploy-cloudbase:
    needs: build
    runs-on: ubuntu-latest
    name: Deploy COS
    steps:
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: cloudbase-cli
          restore-keys: cloudbase-cli

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ./dist

      - name: Upload COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args:  delete -rf / && upload -r ./dist/ /
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          region: ap-nanjing

      #   run: |
      #     npm install -g @cloudbase/cli
      #     npx tcb login --apiKeyId  ${{SECRETS.SID}} --apiKey ${{SECRETS.SKEY}}
      #     npx tcb hosting deploy ./dist . -e  ${{SECRETS.ENVID}}